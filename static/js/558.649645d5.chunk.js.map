{"version":3,"file":"static/js/558.649645d5.chunk.js","mappings":"8LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAG1D,C,8IC0DD,UAlEe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,mCAAG,4FACA,eAC1BD,GAAW,GAFe,kBAKDE,EAAAA,EAAAA,IAAUC,EAAAA,GAJT,eAIuC,CAC7DC,OAAQ,CACNC,QAASC,EAAAA,GACTT,MAAOA,KARa,OAKlBU,EALkB,OAWlBC,GAXkB,OAWJD,EAASE,KAAKD,SAElCZ,EAAUY,GAbc,kDAexBE,QAAQC,IAAR,MAfwB,yBAiBxBX,GAAW,GAjBa,6EAAH,qDAiCzB,OACE,iCACE,4CACA,kBAAMY,SAVW,SAAAC,GACnBA,EAAEC,iBACY,KAAVjB,GACFI,GAEH,EAKG,WACE,kBACEc,KAAK,OACLC,YAAY,gBACZC,SAnBa,SAAAJ,GAEnBf,EAASe,EAAEK,OAAOC,MACnB,KAkBK,mBAAQJ,KAAK,SAAb,yBAEF,wBACGhB,GACC,SAAC,IAAD,IAEAJ,EAAOyB,KAAI,SAAAC,GAAK,OACd,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACGF,EAAMG,MACNH,EAAMI,SAHFJ,EAAME,GADD,QAYzB,C","sources":["components/Loader.js","components/Movies.js"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'components/App.jsx';\nimport { Loader } from 'components/Loader.js';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [titles, getTitles] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  const fetchSearchedMovies = async () => {\n    const searchedMoviesURL = 'search/movie';\n    setLoading(true);\n\n    try {\n      const response = await axios.get(BASE_URL + searchedMoviesURL, {\n        params: {\n          api_key: API_KEY,\n          query: query,\n        },\n      });\n      const results = [...response.data.results];\n      //   console.log(results);\n      getTitles(results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = e => {\n    // e.preventDefault();\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query !== '') {\n      fetchSearchedMovies();\n    }\n  };\n\n  return (\n    <>\n      <h3>SEARCH FOR ...</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"... ANY MOVIE\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Get 'em</button>\n      </form>\n      <ul>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          titles.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                {movie.title}\n                {movie.name}\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useState","titles","getTitles","query","setQuery","isLoading","setLoading","fetchSearchedMovies","axios","BASE_URL","params","api_key","API_KEY","response","results","data","console","log","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","map","movie","to","id","title","name"],"sourceRoot":""}